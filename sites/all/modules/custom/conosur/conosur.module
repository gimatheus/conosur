<?php
/**
 * Implements hook_node_info()
 *//*
function conosur_menu() {
    
    $items['resultado/%/%'] = array(
        'title' => 'derma',
        'page callback' => 'page_resultado_derma',
        'page arguments' => array(1, 2),
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
        'file' => 'derma.pages.inc',
        );
 return $items;
}*/
/**
 * Implements hook_preprocess_page()
 */
function conosur_preprocess_page (&$vars, $hook) {
    $argUno =  arg(0);
    if ($argUno == 'node') {
        $tipe = get_type_node (arg(1));
        if ($tipe == "page") {
            $img_field = get_field_data_img_custom(arg(1), "background", 0, 1);
            if (isset($img_field[0]['uri'])) {
                $og_img_color = image_style_url("img1280x600", $img_field[0]['uri']);
                drupal_add_css(
                    '.bg-page .bg {background-image: url("'. $og_img_color.'");}',
                    array(
                      'group' => CSS_THEME,
                      'type' => 'inline',
                      'media' => 'screen',
                      'preprocess' => FALSE,
                      'weight' => '9999',
                    )
                  );
            }
        }
        
    }
}
function conosur_block_info(){
    $block['block_up_header'] = array(
        'info' => t('Reder sociales header superior'),
        'cache' => DRUPAL_NO_CACHE,
    );
    return $block;
}
/**
 * Implements hook_block_view(). $nodequeue = nodequeue_load_nodes(26);
 */
function conosur_block_view($block_key){
    
}

function get_type_node ($nid) {
    $arraydatos = "";
    $query = db_select('node', 'n');    
    $query->fields('n', array('type'))->condition('n.nid', $nid,'=');
    $result= $query->execute();
    while ($row = $result->fetchAssoc()) {
        $arraydatos = $row["type"];
    }
    return $arraydatos;
}
/**
 * consulta sql retorna imagens contenido
 * @param type $entity_id
 * @param type $img
 * @param type $limit_inf
 * @param type $limit_sup
 * @return type
 */
function get_field_data_img_custom($entity_id, $img, $limit_inf=FALSE, $limit_sup=FALSE) {
    $arraydatos = array();
    $query = db_select('field_data_field_' . $img, 'v');
    $query->join('file_usage', 'fu', 'v.field_' . $img . '_fid = fu.fid'); 
    $query->join('file_managed', 'm', 'fu.fid = m.fid');    
    $query->fields('m', array('filename','uri'))
    	  ->fields('v', array('field_' . $img . '_alt','field_' . $img . '_title'))
    	  ->condition('v.entity_id', $entity_id, '=');
    $query->orderBy('v.delta', "ASC");
    if ($limit_inf && $limit_sup) {
        $query->range($limit_inf, $limit_sup);      
    }    
    $result = $query->execute();
    while ($row = $result->fetchAssoc()) {
        $arraydatos[] = array(
            "uri" => $row["uri"], 
            "filename" => $row["filename"],
            "field_" . $img . "_alt" => $row["field_" . $img . "_alt"],
            "field_" . $img . "_title" => $row["field_". $img ."_title"],
        );
    }
    return $arraydatos;
}